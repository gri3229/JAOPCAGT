plugins {
	id "com.crystaelix.loom" version "jitpack-ae847f1f"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.blamejared.com/"
			}
		}
		filter {
			includeGroup "mezz.jei"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.covers1624.net/"
			}
		}
		filter {
			includeGroup "codechicken"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://repo.cleanroommc.com/releases/"
				metadataSources {
					mavenPom()
					ignoreGradleMetadataRedirection()
				}
			}
		}
		filter {
			includeGroup "zone.rong"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
}

sourceSets {
	main
}

def mcVersion = "1.12.2"
def modName = "JAOPCAGTCE"
def modId = "jaopcagtce"
def specVersion = "1"
def vendor = "thelm"

group = "thelm.jaopca.gtce"
version = "1.0.0.5"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(8)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "fabric.log.console.level", "debug"
			environmentVariable "MC_VERSION", mcVersion
		}
		client {
			programArg "--username=Dev"
			vmArg "-Xmx7G"
		}
		server {
			vmArg "-Xmx3G"
		}
	}
	generatedIntermediateMappings()
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.12.2"
	mappings "de.oceanlabs.mcp:mcp_stable:39-1.12"
	legacyForge "net.minecraftforge:forge:1.12.2-14.23.5.2860"

	// Dependencies
	implementation "curse.maven:wrapup-275153:2486198"
	modImplementation "curse.maven:jaopca-266936:5520331"
	modImplementation "codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal"
	modImplementation "curse.maven:gregtechce-293327:3478805"
	modImplementation "mezz.jei:jei_1.12.2:4.16.1.1012"

	// Testing
	modImplementation "curse.maven:abyssalcraft-53686:5330323"

	// Performance
	implementation("zone.rong:mixinbooter:9.1") {transitive = false}
	modImplementation "curse.maven:reid-629017:5502915"
	modImplementation "curse.maven:vintagefix-871198:5536276"
	modImplementation "curse.maven:lolasm-460609:5257348"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor,
]

jar {
	manifest.attributes(manifestAttributes)
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

publishMods {
	file = remapJar.archiveFile
	version = displayName = "GTCE-${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = BETA
	modLoaders.add("forge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.gradleProperty("curseforge.token")
		projectId = "836168"
		minecraftVersions.add(mcVersion)
		requires "jaopca", "gregtechce"
	}

	modrinth {
		accessToken = providers.gradleProperty("modrinth.token")
		projectId = "DFWm1IQL"
		minecraftVersions.add(mcVersion)
		requires "jaopca"
	}
}
