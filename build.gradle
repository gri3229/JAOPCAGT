plugins {
	id "com.crystaelix.loom" version "jitpack-6cccf24f"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "me.modmuss50.mod-publish-plugin" version "0.7.2"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://nexus.gtnewhorizons.com/repository/public/"
				metadataSources {
					mavenPom()
					ignoreGradleMetadataRedirection()
				}
			}
		}
		filter {
			includeGroup "com.github.GTNewHorizons"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://jitpack.io/"
			}
		}
		filter {
			includeGroup "com.github.LegacyModdingMC.UniMixins"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
}

def mcVersion = "1.7.10"
def modName = "JAOPCAGT4"
def modId = "jaopcagt4"
def specVersion = "1"
def vendor = "thelm"

group = "thelm.jaopca.gt4"
version = "1.0.0.5"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(8)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "fabric.log.level", "debug"
		}
		client {
			programArg "--username=Dev"
			vmArg "-Xmx7G"
		}
		server {
			vmArg "-Xmx3G"
		}
	}
	generatedIntermediateMappings()
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.7.10"
	mappings "net.minecraftforge:forge:1.7.10-10.13.4.1614-1.7.10:userdev"
	legacyForge "net.minecraftforge:forge:1.7.10-10.13.4.1614-1.7.10:universal"

	// Dependencies
	implementation("com.github.LegacyModdingMC.UniMixins:unimixins-all-1.7.10:0.1.17") {transitive = false}
	modImplementation "curse.maven:jaopca-266936:5601290"
	modImplementation "curse.maven:industrial-craft-242638:2353971"
	modImplementation "curse.maven:gregtech-4-483827:4685300"
	modImplementation "curse.maven:cofh-core-69162:2388750"
	modImplementation "curse.maven:thermal-foundation-222880:2388752"
	modImplementation "curse.maven:thermal-expansion-69163:2388758"
	modImplementation("com.github.GTNewHorizons:CodeChickenLib:1.3.0") {transitive = false}
	modImplementation("com.github.GTNewHorizons:CodeChickenCore:1.3.4") {transitive = false}
	modImplementation("com.github.GTNewHorizons:NotEnoughItems:2.6.14-GTNH") {transitive = false}
	modImplementation "curse.maven:nei-integration-225251:2282522"

	// Testing
	modImplementation "curse.maven:hbms-nuclear-tech-mod-235439:5534354"

	// Performance
	modImplementation "com.github.GTNewHorizons:GTNHLib:0.3.2"
	modImplementation("com.github.GTNewHorizons:NotEnoughIds:2.1.0") {transitive = false}
	modImplementation "curse.maven:archaicfix-677782:5549709"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml", "META-INF/neoforge.mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor
]

jar {
	manifest.attributes(manifestAttributes)
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

publishMods {
	file = remapJar.archiveFile
	version = displayName = "GT4-${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = ALPHA
	modLoaders.add("forge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.gradleProperty("curseforge.token")
		projectId = "836168"
		minecraftVersions.add(mcVersion)
		requires "jaopca", "gregtech-4"
	}

	modrinth {
		accessToken = providers.gradleProperty("modrinth.token")
		projectId = "DFWm1IQL"
		minecraftVersions.add(mcVersion)
		requires "jaopca"
	}
}
